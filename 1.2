root@sapl8464:/home/dockeruser/n8n-worker# docker-compose build --no-cache
postgres uses an image, skipping
pgadmin uses an image, skipping
redis uses an image, skipping
redis_admin uses an image, skipping
Building n8n
[+] Building 28.2s (7/9)                                                                                                                                                                       docker:default
 => [internal] load build definition from Dockerfile                                                                                                                                                     0.0s
 => => transferring dockerfile: 1.15kB                                                                                                                                                                   0.0s
 => [internal] load metadata for docker.io/n8nio/n8n:latest                                                                                                                                              1.4s
 => [auth] n8nio/n8n:pull token for registry-1.docker.io                                                                                                                                                 0.0s
 => [internal] load .dockerignore                                                                                                                                                                        0.0s
 => => transferring context: 2B                                                                                                                                                                          0.0s
 => CACHED [1/5] FROM docker.io/n8nio/n8n:latest@sha256:fa410b71ccb5ddee9f9e4b25a964fbc8fcf56744d5f24dc4d2b8b414ae76ee26                                                                                 0.0s
 => => resolve docker.io/n8nio/n8n:latest@sha256:fa410b71ccb5ddee9f9e4b25a964fbc8fcf56744d5f24dc4d2b8b414ae76ee26                                                                                        0.0s
 => [2/5] RUN npm config set proxy http://10.132.222.73:9090 &&     npm config set https-proxy http://10.132.222.73:9090 &&     npm config set strict-ssl false                                          1.1s
 => ERROR [3/5] RUN cd /usr/local/lib/node_modules/n8n &&     npm install global-agent                                                                                                                  25.4s
------
 > [3/5] RUN cd /usr/local/lib/node_modules/n8n &&     npm install global-agent:
25.09 npm error code EUNSUPPORTEDPROTOCOL
25.09 npm error Unsupported URL Type "workspace:": workspace:*
25.10 npm error A complete log of this run can be found in: /root/.npm/_logs/2025-10-14T22_29_56_066Z-debug-0.log
------
Dockerfile:16
--------------------
  15 |     # Instalar global-agent en el directorio de n8n (accesible para usuario node)
  16 | >>> RUN cd /usr/local/lib/node_modules/n8n && \
  17 | >>>     npm install global-agent
  18 |
--------------------
ERROR: failed to build: failed to solve: process "/bin/sh -c cd /usr/local/lib/node_modules/n8n &&     npm install global-agent" did not complete successfully: exit code: 1
ERROR: Service 'n8n' failed to build : Build failed
root@sapl8464:/home/dockeruser/n8n-worker#




///////////////


# Detener y eliminar contenedores
docker-compose down

# Ver qué imágenes tienes
docker images | grep n8n

# Eliminar las imágenes viejas de n8n (opcional pero recomendado)
docker-compose down --rmi all

# O manualmente eliminar imágenes huérfanas
docker image prune -a

# Ahora reconstruir desde cero
docker-compose build --no-cache

# Levantar de nuevo
docker-compose up -d




+++++++++++++++++++++++++++

FROM n8nio/n8n:latest

# Configurar proxy para npm durante la construcción
ARG HTTP_PROXY=http://10.132.222.73:9090
ARG HTTPS_PROXY=http://10.132.222.73:9090
ARG NO_PROXY=localhost,127.0.0.1

USER root

# Configurar npm para usar el proxy
RUN npm config set proxy ${HTTP_PROXY} && \
    npm config set https-proxy ${HTTPS_PROXY} && \
    npm config set strict-ssl false

# Instalar global-agent en el directorio de n8n (accesible para usuario node)
RUN cd /usr/local/lib/node_modules/n8n && \
    npm install global-agent

# Limpiar configuración de proxy de npm
RUN npm config delete proxy && \
    npm config delete https-proxy

# Crear script de inicio que busque global-agent en node_modules de n8n
RUN echo '#!/bin/sh' > /usr/local/bin/start-n8n.sh && \
    echo 'export NODE_PATH=/usr/local/lib/node_modules/n8n/node_modules:$NODE_PATH' >> /usr/local/bin/start-n8n.sh && \
    echo 'exec node -r global-agent/bootstrap /usr/local/bin/n8n "$@"' >> /usr/local/bin/start-n8n.sh && \
    chmod +x /usr/local/bin/start-n8n.sh

USER node

ENTRYPOINT ["/usr/local/bin/start-n8n.sh"]



//////////////+++++++++++++++++++++++++++++++
root@sapl8464:/home/dockeruser/n8n-worker# docker-compose logs -f n8n
Attaching to n8n
n8n            | node:internal/modules/cjs/loader:1386
n8n            |   throw err;
n8n            |   ^
n8n            |
n8n            | Error: Cannot find module 'global-agent/bootstrap'
n8n            | Require stack:
n8n            | - internal/preload
n8n            |     at Function._resolveFilename (node:internal/modules/cjs/loader:1383:15)
n8n            |     at defaultResolveImpl (node:internal/modules/cjs/loader:1025:19)
n8n            |     at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1030:22)
n8n            |     at Function._load (node:internal/modules/cjs/loader:1192:37)
n8n            |     at TracingChannel.traceSync (node:diagnostics_channel:322:14)
n8n            |     at wrapModuleLoad (node:internal/modules/cjs/loader:237:24)
n8n            |     at Module.require (node:internal/modules/cjs/loader:1463:12)
n8n            |     at node:internal/modules/cjs/loader:1989:12
n8n            |     at loadPreloadModules (node:internal/process/pre_execution:733:5)
n8n            |     at setupUserModules (node:internal/process/pre_execution:208:5) {
n8n            |   code: 'MODULE_NOT_FOUND',
n8n            |   requireStack: [ 'internal/preload' ]
n8n            | }
n8n            |
n8n            | Node.js v22.20.0
n8n            | node:internal/modules/cjs/loader:1386
n8n            |   throw err;
n8n            |   ^
n8n            |
n8n            | Error: Cannot find module 'global-agent/bootstrap'
n8n            | Require stack:
n8n            | - internal/preload
n8n            |     at Function._resolveFilename (node:internal/modules/cjs/loader:1383:15)
n8n            |     at defaultResolveImpl (node:internal/modules/cjs/loader:1025:19)
n8n            |     at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1030:22)
n8n            |     at Function._load (node:internal/modules/cjs/loader:1192:37)
n8n            |     at TracingChannel.traceSync (node:diagnostics_channel:322:14)
n8n            |     at wrapModuleLoad (node:internal/modules/cjs/loader:237:24)
n8n            |     at Module.require (node:internal/modules/cjs/loader:1463:12)
n8n            |     at node:internal/modules/cjs/loader:1989:12
n8n            |     at loadPreloadModules (node:internal/process/pre_execution:733:5)
n8n            |     at setupUserModules (node:internal/process/pre_execution:208:5) {
n8n            |   code: 'MODULE_NOT_FOUND',
n8n            |   requireStack: [ 'internal/preload' ]
n8n            | }
n8n            |
n8n            | Node.js v22.20.0
n8n            | node:internal/modules/cjs/loader:1386
n8n            |   throw err;
n8n            |   ^
n8n            |
n8n            | Error: Cannot find module 'global-agent/bootstrap'
n8n            | Require stack:
n8n            | - internal/preload
n8n            |     at Function._resolveFilename (node:internal/modules/cjs/loader:1383:15)
n8n            |     at defaultResolveImpl (node:internal/modules/cjs/loader:1025:19)
n8n            |     at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1030:22)
n8n            |     at Function._load (node:internal/modules/cjs/loader:1192:37)
n8n            |     at TracingChannel.traceSync (node:diagnostics_channel:322:14)
n8n            |     at wrapModuleLoad (node:internal/modules/cjs/loader:237:24)
n8n            |     at Module.require (node:internal/modules/cjs/loader:1463:12)
n8n            |     at node:internal/modules/cjs/loader:1989:12
n8n            |     at loadPreloadModules (node:internal/process/pre_execution:733:5)
n8n            |     at setupUserModules (node:internal/process/pre_execution:208:5) {
n8n            |   code: 'MODULE_NOT_FOUND',
n8n            |   requireStack: [ 'internal/preload' ]
n8n            | }
n8n            |
n8n            | Node.js v22.20.0
n8n            | node:internal/modules/cjs/loader:1386
n8n            |   throw err;
n8n            |   ^
n8n            |
n8n            | Error: Cannot find module 'global-agent/bootstrap'
n8n            | Require stack:
n8n            | - internal/preload
n8n            |     at Function._resolveFilename (node:internal/modules/cjs/loader:1383:15)
n8n            |     at defaultResolveImpl (node:internal/modules/cjs/loader:1025:19)
n8n            |     at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1030:22)
n8n            |     at Function._load (node:internal/modules/cjs/loader:1192:37)
n8n            |     at TracingChannel.traceSync (node:diagnostics_channel:322:14)
n8n            |     at wrapModuleLoad (node:internal/modules/cjs/loader:237:24)
n8n            |     at Module.require (node:internal/modules/cjs/loader:1463:12)
n8n            |     at node:internal/modules/cjs/loader:1989:12
n8n            |     at loadPreloadModules (node:internal/process/pre_execution:733:5)
n8n            |     at setupUserModules (node:internal/process/pre_execution:208:5) {
n8n            |   code: 'MODULE_NOT_FOUND',
n8n            |   requireStack: [ 'internal/preload' ]
n8n            | }
n8n            |
n8n            | Node.js v22.20.0
n8n            | node:internal/modules/cjs/loader:1386
n8n            |   throw err;
n8n            |   ^
n8n            |
n8n            | Error: Cannot find module 'global-agent/bootstrap'
n8n            | Require stack:
n8n            | - internal/preload
n8n            |     at Function._resolveFilename (node:internal/modules/cjs/loader:1383:15)
n8n            |     at defaultResolveImpl (node:internal/modules/cjs/loader:1025:19)
n8n            |     at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1030:22)
n8n            |     at Function._load (node:internal/modules/cjs/loader:1192:37)
n8n            |     at TracingChannel.traceSync (node:diagnostics_channel:322:14)
n8n            |     at wrapModuleLoad (node:internal/modules/cjs/loader:237:24)
n8n            |     at Module.require (node:internal/modules/cjs/loader:1463:12)
n8n            |     at node:internal/modules/cjs/loader:1989:12
n8n            |     at loadPreloadModules (node:internal/process/pre_execution:733:5)
n8n            |     at setupUserModules (node:internal/process/pre_execution:208:5) {
n8n            |   code: 'MODULE_NOT_FOUND',
n8n            |   requireStack: [ 'internal/preload' ]
n8n            | }
n8n            |
n8n            | Node.js v22.20.0
n8n            | node:internal/modules/cjs/loader:1386
n8n            |   throw err;
n8n            |   ^
n8n            |
n8n            | Error: Cannot find module 'global-agent/bootstrap'
n8n            | Require stack:
n8n            | - internal/preload
n8n            |     at Function._resolveFilename (node:internal/modules/cjs/loader:1383:15)
n8n            |     at defaultResolveImpl (node:internal/modules/cjs/loader:1025:19)
n8n            |     at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1030:22)
n8n            |     at Function._load (node:internal/modules/cjs/loader:1192:37)
n8n            |     at TracingChannel.traceSync (node:diagnostics_channel:322:14)
n8n            |     at wrapModuleLoad (node:internal/modules/cjs/loader:237:24)
n8n            |     at Module.require (node:internal/modules/cjs/loader:1463:12)
n8n            |     at node:internal/modules/cjs/loader:1989:12
n8n            |     at loadPreloadModules (node:internal/process/pre_execution:733:5)
n8n            |     at setupUserModules (node:internal/process/pre_execution:208:5) {
n8n            |   code: 'MODULE_NOT_FOUND',
n8n            |   requireStack: [ 'internal/preload' ]
n8n            | }
n8n            |
n8n            | Node.js v22.20.0
n8n            | node:internal/modules/cjs/loader:1386
n8n            |   throw err;
n8n            |   ^
n8n            |
n8n            | Error: Cannot find module 'global-agent/bootstrap'
n8n            | Require stack:
n8n            | - internal/preload
n8n            |     at Function._resolveFilename (node:internal/modules/cjs/loader:1383:15)
n8n            |     at defaultResolveImpl (node:internal/modules/cjs/loader:1025:19)
n8n            |     at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1030:22)
n8n            |     at Function._load (node:internal/modules/cjs/loader:1192:37)
n8n            |     at TracingChannel.traceSync (node:diagnostics_channel:322:14)
n8n            |     at wrapModuleLoad (node:internal/modules/cjs/loader:237:24)
n8n            |     at Module.require (node:internal/modules/cjs/loader:1463:12)
n8n            |     at node:internal/modules/cjs/loader:1989:12
n8n            |     at loadPreloadModules (node:internal/process/pre_execution:733:5)
n8n            |     at setupUserModules (node:internal/process/pre_execution:208:5) {
n8n            |   code: 'MODULE_NOT_FOUND',
n8n            |   requireStack: [ 'internal/preload' ]
n8n            | }
n8n            |
n8n            | Node.js v22.20.0
n8n            | node:internal/modules/cjs/loader:1386
n8n            |   throw err;
n8n            |   ^
n8n            |
n8n            | Error: Cannot find module 'global-agent/bootstrap'
n8n            | Require stack:
n8n            | - internal/preload
n8n            |     at Function._resolveFilename (node:internal/modules/cjs/loader:1383:15)
n8n            |     at defaultResolveImpl (node:internal/modules/cjs/loader:1025:19)
n8n            |     at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1030:22)
n8n            |     at Function._load (node:internal/modules/cjs/loader:1192:37)
n8n            |     at TracingChannel.traceSync (node:diagnostics_channel:322:14)
n8n            |     at wrapModuleLoad (node:internal/modules/cjs/loader:237:24)
n8n            |     at Module.require (node:internal/modules/cjs/loader:1463:12)
n8n            |     at node:internal/modules/cjs/loader:1989:12
n8n            |     at loadPreloadModules (node:internal/process/pre_execution:733:5)
n8n            |     at setupUserModules (node:internal/process/pre_execution:208:5) {
n8n            |   code: 'MODULE_NOT_FOUND',
n8n            |   requireStack: [ 'internal/preload' ]
n8n            | }
n8n            |
n8n            | Node.js v22.20.0
n8n exited with code 1
root@sapl8464:/home/dockeruser/n8n-worker#




------------------------------
FROM n8nio/n8n:latest

# Configurar proxy para npm durante la construcción
ARG HTTP_PROXY=http://10.132.222.73:9090
ARG HTTPS_PROXY=http://10.132.222.73:9090
ARG NO_PROXY=localhost,127.0.0.1

USER root

# Configurar npm para usar el proxy
RUN npm config set proxy ${HTTP_PROXY} && \
    npm config set https-proxy ${HTTPS_PROXY} && \
    npm config set strict-ssl false

# Instalar global-agent
RUN npm install -g global-agent

# Limpiar configuración de proxy de npm (por seguridad)
RUN npm config delete proxy && \
    npm config delete https-proxy

# Crear script de inicio personalizado
RUN echo '#!/bin/sh' > /usr/local/bin/start-n8n.sh && \
    echo 'exec node -r global-agent/bootstrap /usr/local/bin/n8n "$@"' >> /usr/local/bin/start-n8n.sh && \
    chmod +x /usr/local/bin/start-n8n.sh

USER node

ENTRYPOINT ["/usr/local/bin/start-n8n.sh"]

------------------


root@sapl8464:/home/dockeruser/n8n-worker# docker-compose build --no-cache
postgres uses an image, skipping
pgadmin uses an image, skipping
redis uses an image, skipping
redis_admin uses an image, skipping
Building n8n
[+] Building 73.2s (5/6)                                                                                                                                                                       docker:default
 => [internal] load build definition from Dockerfile                                                                                                                                                     0.0s
 => => transferring dockerfile: 856B                                                                                                                                                                     0.0s
 => [internal] load metadata for docker.io/n8nio/n8n:latest                                                                                                                                              0.0s
 => [internal] load .dockerignore                                                                                                                                                                        0.0s
 => => transferring context: 2B                                                                                                                                                                          0.0s
 => [1/3] FROM docker.io/n8nio/n8n:latest                                                                                                                                                                0.5s
 => ERROR [2/3] RUN npm install -g global-agent                                                                                                                                                         72.5s
------
 > [2/3] RUN npm install -g global-agent:
72.35 npm error code ECONNREFUSED
72.35 npm error errno ECONNREFUSED
72.36 npm error FetchError: request to https://registry.npmjs.org/global-agent failed, reason:
72.36 npm error     at ClientRequest.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/minipass-fetch/lib/index.js:130:14)
72.36 npm error     at ClientRequest.emit (node:events:519:28)
72.36 npm error     at emitErrorEvent (node:_http_client:105:11)
72.36 npm error     at _destroy (node:_http_client:898:9)
72.36 npm error     at onSocketNT (node:_http_client:918:5)
72.36 npm error     at process.processTicksAndRejections (node:internal/process/task_queues:91:21) {
72.36 npm error   code: 'ECONNREFUSED',
72.36 npm error   errno: 'ECONNREFUSED',
72.36 npm error   type: 'system',
72.36 npm error   requiredBy: '.'
72.36 npm error }
72.36 npm error
72.36 npm error If you are behind a proxy, please make sure that the
72.36 npm error 'proxy' config is set properly.  See: 'npm help config'
72.36 npm error A complete log of this run can be found in: /root/.npm/_logs/2025-10-14T22_14_14_435Z-debug-0.log
------
Dockerfile:9
--------------------
   7 |     # Instalamos global-agent: es una librería de Node.js que intercepta
   8 |     # TODAS las peticiones HTTP/HTTPS y las redirige al proxy
   9 | >>> RUN npm install -g global-agent
  10 |
  11 |     # Creamos un script personalizado que inicia n8n con global-agent activado
--------------------
ERROR: failed to build: failed to solve: process "/bin/sh -c npm install -g global-agent" did not complete successfully: exit code: 1
ERROR: Service 'n8n' failed to build : Build failed
root@sapl8464:/home/dockeruser/n8n-worker#






---------------------


docker-compose.yml  Dokerfile  pgadmin_data
root@sapl8464:/home/dockeruser/n8n-worker# docker-compose build --no-cache
postgres uses an image, skipping
pgadmin uses an image, skipping
redis uses an image, skipping
redis_admin uses an image, skipping
Building n8n
[+] Building 0.2s (1/1) FINISHED                                                                                                                                                               docker:default
 => [internal] load build definition from Dockerfile                                                                                                                                                     0.1s
 => => transferring dockerfile: 2B                                                                                                                                                                       0.0s
ERROR: failed to build: failed to solve: failed to read dockerfile: open Dockerfile: no such file or directory
ERROR: Service 'n8n' failed to build : Build failed
root@sapl8464:/home/dockeruser/n8n-worker#


***********************

services:
  n8n:
    build: .  # ← CAMBIO CLAVE: Construye desde el Dockerfile local
    container_name: n8n
    restart: always
    ports:
      - "5678:5678"
    environment:
      # ============================================================
      # CONFIGURACIÓN DE PROXY - EXPLICACIÓN DETALLADA
      # ============================================================
      
      # Variables para global-agent (librería de Node.js)
      # Estas SON NECESARIAS porque Node.js no lee HTTP_PROXY por defecto
      - GLOBAL_AGENT_HTTP_PROXY=http://10.132.222.73:9090
      - GLOBAL_AGENT_HTTPS_PROXY=http://10.132.222.73:9090
      - GLOBAL_AGENT_NO_PROXY=localhost,127.0.0.1,postgres,redis
      
      # Variables tradicionales de proxy (para herramientas del sistema)
      # Estas las usa curl, wget, apt, pero NO Node.js directamente
      - HTTP_PROXY=http://10.132.222.73:9090
      - HTTPS_PROXY=http://10.132.222.73:9090
      - NO_PROXY=localhost,127.0.0.1,postgres,redis
      
      # Deshabilitar validación de certificados SSL
      # IMPORTANTE: Úsalo solo si el proxy intercepta SSL
      - NODE_TLS_REJECT_UNAUTHORIZED=0
      # ============================================================

      # Configuración de n8n
      - N8N_SECURE_COOKIE=false
      - N8N_BASIC_AUTH_ACTIVE=${N8N_BASIC_AUTH_ACTIVE}
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
      - N8N_HOST=${N8N_HOST}
      - N8N_PORT=${N8N_PORT}
      - N8N_PROTOCOL=${N8N_PROTOCOL}
      - N8N_LOG_LEVEL=${N8N_LOG_LEVEL}
      - NODE_ENV=production
      - WEBHOOK_URL=${WEBHOOK_URL}
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}

      # Configuración de la base de datos
      - N8N_POSTGRES_HOST=postgres
      - N8N_POSTGRES_PORT=5432
      - N8N_POSTGRES_USER=${POSTGRES_USER}
      - N8N_POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - N8N_POSTGRES_DB=${POSTGRES_DB}

      # Configuración de la encriptación
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=false
      - N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE=true

      # Cola y Redis
      - EXECUTIONS_MODE=queue
      - N8N_DISABLE_EXECUTIONS=true
      - QUEUE_BULL_REDIS_ENABLED=true
      - QUEUE_BULL_REDIS_HOST=redis
      - QUEUE_BULL_REDIS_PORT=6379
      - N8N_RUNNERS_ENABLED=true
      - OFFLOAD_MANUAL_EXECUTIONS_TO_WORKERS=true

    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - n8n_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  postgres:
    image: postgres:13
    container_name: n8n_postgres
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - n8n_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: n8n_pgadmin
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "8080:80"
    volumes:
      - ./pgadmin_data:/var/lib/pgadmin
    networks:
      - n8n_network
    depends_on:
      - postgres

  n8n_worker1:
    build: .  # ← CAMBIO: También usa el Dockerfile
    container_name: n8n_worker1
    restart: always
    environment:
      # ============================================================
      # CONFIGURACIÓN DE PROXY (igual que el contenedor principal)
      # ============================================================
      - GLOBAL_AGENT_HTTP_PROXY=http://10.132.222.73:9090
      - GLOBAL_AGENT_HTTPS_PROXY=http://10.132.222.73:9090
      - GLOBAL_AGENT_NO_PROXY=localhost,127.0.0.1,postgres,redis,n8n
      - HTTP_PROXY=http://10.132.222.73:9090
      - HTTPS_PROXY=http://10.132.222.73:9090
      - NO_PROXY=localhost,127.0.0.1,postgres,redis,n8n
      - NODE_TLS_REJECT_UNAUTHORIZED=0
      # ============================================================

      # Configuración de la base de datos
      - N8N_POSTGRES_HOST=postgres
      - N8N_POSTGRES_PORT=5432
      - N8N_POSTGRES_USER=${POSTGRES_USER}
      - N8N_POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - N8N_POSTGRES_DB=${POSTGRES_DB}
      - NODE_ENV=production
      - N8N_LOG_LEVEL=debug
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}

      # Configuración de la cola y Redis
      - N8N_EXECUTIONS_PROCESS=worker
      - EXECUTIONS_MODE=queue
      - QUEUE_BULL_REDIS_ENABLED=true
      - QUEUE_BULL_REDIS_HOST=redis
      - QUEUE_BULL_REDIS_PORT=6379
      - N8N_WORKER_CONCURRENCY=10
      - N8N_RUNNERS_ENABLED=true
      - OFFLOAD_MANUAL_EXECUTIONS_TO_WORKERS=true

      # Configuración de la encriptación
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=false
      - N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE=true

    volumes:
      - n8n_data:/home/node/.n8n
    depends_on:
      n8n:
        condition: service_started
      redis:
        condition: service_healthy
    networks:
      - n8n_network
    command: worker

  n8n_worker2:
    build: .  # ← CAMBIO: También usa el Dockerfile
    container_name: n8n_worker2
    restart: always
    environment:
      # ============================================================
      # CONFIGURACIÓN DE PROXY (igual que los anteriores)
      # ============================================================
      - GLOBAL_AGENT_HTTP_PROXY=http://10.132.222.73:9090
      - GLOBAL_AGENT_HTTPS_PROXY=http://10.132.222.73:9090
      - GLOBAL_AGENT_NO_PROXY=localhost,127.0.0.1,postgres,redis,n8n
      - HTTP_PROXY=http://10.132.222.73:9090
      - HTTPS_PROXY=http://10.132.222.73:9090
      - NO_PROXY=localhost,127.0.0.1,postgres,redis,n8n
      - NODE_TLS_REJECT_UNAUTHORIZED=0
      # ============================================================

      # Configuración de la base de datos
      - N8N_POSTGRES_HOST=postgres
      - N8N_POSTGRES_PORT=5432
      - N8N_POSTGRES_USER=${POSTGRES_USER}
      - N8N_POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - N8N_POSTGRES_DB=${POSTGRES_DB}
      - NODE_ENV=production
      - N8N_LOG_LEVEL=debug
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}

      # Configuración de la cola y Redis
      - N8N_EXECUTIONS_PROCESS=worker
      - EXECUTIONS_MODE=queue
      - QUEUE_BULL_REDIS_ENABLED=true
      - QUEUE_BULL_REDIS_HOST=redis
      - QUEUE_BULL_REDIS_PORT=6379
      - N8N_WORKER_CONCURRENCY=10
      - N8N_RUNNERS_ENABLED=true
      - OFFLOAD_MANUAL_EXECUTIONS_TO_WORKERS=true

      # Configuración de la encriptación
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=false
      - N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE=true

    volumes:
      - n8n_data:/home/node/.n8n
    depends_on:
      n8n:
        condition: service_started
      redis:
        condition: service_healthy
    networks:
      - n8n_network
    command: worker

  redis:
    image: redis:6-alpine
    container_name: n8n_redis
    restart: always
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - n8n_network

  redis_admin:
    image: rediscommander/redis-commander:latest
    container_name: n8n_redis_admin
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - n8n_network

networks:
  n8n_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  n8n_data:
  pgadmin_data:

*****************************

# Usamos la imagen oficial de n8n
FROM n8nio/n8n:latest

# Cambiamos a usuario root para instalar paquetes
USER root

# Instalamos global-agent: es una librería de Node.js que intercepta 
# TODAS las peticiones HTTP/HTTPS y las redirige al proxy
RUN npm install -g global-agent

# Creamos un script personalizado que inicia n8n con global-agent activado
# El "-r global-agent/bootstrap" carga global-agent ANTES de que n8n inicie
RUN echo '#!/bin/sh' > /usr/local/bin/start-n8n.sh && \
    echo 'exec node -r global-agent/bootstrap /usr/local/bin/n8n "$@"' >> /usr/local/bin/start-n8n.sh && \
    chmod +x /usr/local/bin/start-n8n.sh

# Volvemos al usuario node (por seguridad)
USER node

# Definimos el punto de entrada con nuestro script personalizado
ENTRYPOINT ["/usr/local/bin/start-n8n.sh"]

  
